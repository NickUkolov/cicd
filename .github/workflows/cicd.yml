name: test and deploy

on:
  push:
    branches: [cicd]

jobs:
  tests:
    runs-on: ubuntu-22.04
    env:
      DEBUG: ${secrets.DEBUG}
      SECRET_KEY: ${secrets.SECRET_KEY}
      DJANGO_ALLOWED_HOSTS: ${secrets.DJANGO_ALLOWED_HOSTS}
      POSTGRES_ENGINE: ${secrets.POSTGRES_ENGINE}
      POSTGRES_DATABASE: ${secrets.POSTGRES_DATABASE}
      POSTGRES_USER: ${secrets.POSTGRES_USER}
      POSTGRES_PASSWORD: ${secrets.POSTGRES_PASSWORD}
      POSTGRES_HOST: ${secrets.POSTGRES_HOST}
      POSTGRES_PORT: ${secrets.POSTGRES_PORT}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${env.POSTGRES_DATABASE}
          POSTGRES_USER: ${env.POSTGRES_USER}
          POSTGRES_PASSWORD: ${env.POSTGRES_PASSWORD}
        ports:
          - '5432:5432'
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: check new code
        uses: actions/checkout@v2

      - name: python install
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: requirements install
        run: pip install -r requirements.txt

      - name: linters
        run: flake8 logistic/ --exclude logistic/migrations/

      - name: tests
        run: python manage.py test
        env:
          DEBUG: ${env.DEBUG}
          SECRET_KEY: ${env.SECRET_KEY}
          DJANGO_ALLOWED_HOSTS: ${env.DJANGO_ALLOWED_HOSTS}
          POSTGRES_ENGINE: ${env.POSTGRES_ENGINE}
          POSTGRES_DATABASE: ${env.POSTGRES_DATABASE}
          POSTGRES_USER: ${env.POSTGRES_USER}
          POSTGRES_PASSWORD: ${env.POSTGRES_PASSWORD}
          POSTGRES_HOST: ${env.POSTGRES_HOST}
          POSTGRES_PORT: ${env.POSTGRES_PORT}


